package kops

import (
	"github.com/hashicorp/terraform-plugin-sdk/helper/schema"
)

func schemaKubeAPIServerConfig() *schema.Schema {
	return &schema.Schema{
		Type:     schema.TypeList,
		Optional: true,
		Computed: true,
		MaxItems: 1,
		Elem: &schema.Resource{
			Schema: map[string]*schema.Schema{
				"address":                                  schemaStringOptionalComputed(),
				"api_server_count":                         schemaIntOptional(),
				"audit_log_format":                         schemaStringOptionalComputed(),
				"audit_log_max_age":                        schemaIntOptional(),
				"audit_log_max_backups":                    schemaIntOptional(),
				"audit_log_max_size":                       schemaIntOptional(),
				"audit_log_path":                           schemaStringOptionalComputed(),
				"audit_policy_file":                        schemaStringOptionalComputed(),
				"authentication_token_webhook_cache_ttl":   schemaStringOptional(),
				"authentication_token_webhook_config_file": schemaStringOptionalComputed(),
				"authorization_mode":                       schemaStringOptionalDefault("AlwaysAllow"),
				"authorization_rbac_super_user":            schemaStringOptionalComputed(),
				"allow_privileged":                         schemaBoolOptional(),
				"anonymous_auth":                           schemaBoolOptional(),
				"basic_auth_file":                          schemaStringOptionalComputed(),
				"bind_address":                             schemaStringOptionalComputed(),
				"client_ca_file":                           schemaStringOptionalComputed(),
				"cloud_provider":                           schemaStringOptionalComputed(),
				"disable_admission_plugins":                schemaStringSliceOptional(),
				"enable_admission_plugins":                 schemaStringSliceOptional(),
				"enable_aggregator_routing":                schemaBoolOptional(),
				"enable_bootstrap_auth_token":              schemaBoolOptional(),
				"etcd_ca_file":                             schemaStringOptionalComputed(),
				"etcd_cert_file":                           schemaStringOptionalComputed(),
				"etcd_key_file":                            schemaStringOptionalComputed(),
				"etcd_quorum_read":                         schemaBoolOptional(),
				"etcd_servers":                             schemaStringSliceOptional(),
				"etcd_servers_overrides":                   schemaStringSliceOptional(),
				"experimental_encryption_provider_config":  schemaStringOptionalComputed(),
				"feature_gates":                            schemaStringMap(),
				"insecure_bind_address":                    schemaStringOptionalComputed(),
				"insecure_port":                            schemaIntOptional(),
				"image":                                    schemaStringOptionalComputed(),
				"kubelet_client_certificate":               schemaStringOptionalComputed(),
				"kubelet_client_key":                       schemaStringOptionalComputed(),
				"kubelet_preferred_address_types":          schemaStringSliceOptional(),
				"log_level":                                schemaIntOptional(),
				"max_requests_inflight":                    schemaIntOptional(),
				"mix_request_timeout":                      schemaIntOptional(),
				"oidc_ca_file":                             schemaStringOptional(),
				"oidc_client_id":                           schemaStringOptional(),
				"oidc_groups_claim":                        schemaStringOptional(),
				"oidc_groups_prefix":                       schemaStringOptional(),
				"oidc_issuer_url":                          schemaStringOptional(),
				"oidc_username_claim":                      schemaStringOptional(),
				"oidc_username_prefix":                     schemaStringOptional(),
				"proxy_client_cert_file":                   schemaStringOptionalComputed(),
				"proxy_client_key_file":                    schemaStringOptionalComputed(),
				"requestheader_allowed_names":              schemaStringSliceOptional(),
				"requestheader_client_ca_file":             schemaStringOptionalComputed(),
				"requestheader_extra_header_prefixes":      schemaStringSliceOptional(),
				"requestheader_group_headers":              schemaStringSliceOptional(),
				"requestheader_username_headers":           schemaStringSliceOptional(),
				"runtime_config":                           schemaStringMap(),
				"secure_port":                              schemaIntOptional(),
				"service_cluster_ip_range":                 schemaStringOptionalComputed(),
				"service_node_port_range":                  schemaStringOptionalComputed(),
				"storage_backend":                          schemaStringOptionalComputed(),
				"tls_cert_file":                            schemaStringOptionalComputed(),
				"tls_private_key_file":                     schemaStringOptionalComputed(),
				"token_auth_file":                          schemaStringOptionalComputed(),
			},
		},
	}
}
